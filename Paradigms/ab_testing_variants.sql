--Measure effects of engagement campaign by revenue.
--In the data CTE we use the last_value function to populate the lastEngagementName abd the lastVariantName with the last known value for that user, partitioning and ordering defined in window.
--Then we take the transaction events that occured after the engagementResponse event that populated the responseEngagementName in the first place and the value of the lastVariantName
--Now we have all transaction events and all revenue generated by each variant, using the pivot feature you can create a new column for each unique value of the lastVariantName and plot the revenue by eventDate.
with data as (
	select eventName, userId, eventDate, eventTimestamp, convertedProductAmount,
		last_value(responseEngagementName ignore nulls) over user_window_chronological as lastEngagementName,
		last_value(responseVariantName ignore nulls) over user_window_chronological as lastVariantName
	from events
	where (eventName = 'transaction' and revenueValidated in (0,1)) or responseEngagementName = 'X'-- replace x with name of engagement
	WINDOW user_window_chronological as (partition by userId order by eventTimestamp)
)
select  
	eventDate, 
	lastVariantName, 
	(sum(convertedProductAmount)/100)::float as revenueInUSD, 
        sum(sum(convertedProductAmount)/100) over (partition by lastVariantName order by eventDate)::float as cumulativeRevenueInUSD,
	count(*) as transactions,
        count(distinct userId) as convertedUserCount
from data 
where lastEngagementName is not null 
and eventDate <= current_date
and eventName = 'transaction'
group by eventDate, lastVariantName, lastEngagementName
order by eventDate, lastEngagementName

